# This is a basic workflow to help you get started with Actions
name: DEV Org - Continuous Integration

on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master", "devInt" ]
  pull_request:
    branches: [ "devInt" ]

jobs:
  test:
    name: Check > PMD section
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: echo "🐧 GitHub Action running on ${{ runner.os }}"
    - run: echo "🔎 Retrieving ${{ github.ref }} from ${{ github.repository }}."
    - run: npm install @salesforce/cli --global
    - uses: legetz/setup-pmd@v6.48
    - run: pmd -language apex --dir . --rulesets ./pmd-apex-rules.xml -f text

  changed_files:
      runs-on: ubuntu-latest
      name: Check > Apex Test Class
      environment: DevInt 
      outputs:
        CLASSLIST: none
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.
        # Example 1
        - name: Get changed files
          id: changed-files
          uses: tj-actions/changed-files@v37

        # NOTE: `since_last_remote_commit: true` is implied by default and falls back to the previous local commit.
        - name: List all changed files
          id: set-apex-list
          run: |
            CLASSLIST=''
            for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
              #echo "file: $file"
              if (echo "$file" | grep -q "${{ secrets.SF_YAML_PATTERN_TestClass }}"); then
                  CLASSLIST+="`echo $file | ${{ secrets.SF_YAML_GETNAME }}`,"
              fi
            done
            #echo "TESTCLASSLIST: ${{ vars.TESTCLASSLIST }}"
            echo "FINAL CLASSLIST: $CLASSLIST"
            if [[ $CLASSLIST != '' ]]; then
             echo "Avvio run test class"
             npm install @salesforce/cli --global
             echo "${{ secrets.SALESFORCE_JWT_SECRET_KEY }}" > server.key
             sfdx force:auth:jwt:grant --client-id=${{ secrets.SALESFORCE_CONSUMER_KEY }} --jwt-key-file=server.key --username=${{ secrets.SALESFORCE_DEVHUB_USERNAME }} --set-default-dev-hub --alias devjwt        
             sfdx apex:test:run -l RunSpecifiedTests --class-names "`echo "$CLASSLIST" | sed 's/\,$//'`" --synchronous --result-format human --target-org ${{ secrets.SALESFORCE_DEVHUB_USERNAME }} --code-coverage 
            fi

  deployment:
    name: Deployment section
    runs-on: ubuntu-latest
    needs: [test]
    if: success() && contains('refs/heads/master', github.ref)
    steps:
    - uses: actions/checkout@v3
    - run: npm install @salesforce/cli --global 
    - run: echo "${{ secrets.SALESFORCE_JWT_SECRET_KEY }}" > server.key
    - run: sfdx force:auth:jwt:grant --client-id=${{ secrets.SALESFORCE_CONSUMER_KEY }} --jwt-key-file=server.key --username=${{ secrets.SALESFORCE_DEVHUB_USERNAME }} --set-default-dev-hub --alias devjwt
    - name: Check mandatory-file existence
      id: check_files
      uses: andstor/file-existence-action@v1
      with:
        files: "manifest/package.xml"
    - name: Deploy to Org with Test Class
      if: steps.check_files.outputs.files_exists == 'true'
      run: sfdx force:source:deploy --manifest=manifest/package.xml --testlevel=RunLocalTests -u ${{ secrets.SALESFORCE_DEVHUB_USERNAME }}
    - name: Deploy to Org without Test Class  
      if: steps.check_files.outputs.files_exists == 'false'
      run: sfdx force:source:deploy --manifest=manifest/package.xml -u ${{ secrets.SALESFORCE_DEVHUB_USERNAME }}
    
